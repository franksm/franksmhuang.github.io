<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>仕孟的Blog</title>
  
  <subtitle>日常筆記</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://franksm.github.io/"/>
  <updated>2020-04-14T09:27:03.663Z</updated>
  <id>http://franksm.github.io/</id>
  
  <author>
    <name>Shih-Meng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHP Laravel Model</title>
    <link href="http://franksm.github.io/2020/04/08/PHP-Laravel-Model/"/>
    <id>http://franksm.github.io/2020/04/08/PHP-Laravel-Model/</id>
    <published>2020-04-08T09:22:45.000Z</published>
    <updated>2020-04-14T09:27:03.663Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>編輯 : Frank<br>日期 : 2020/04/08</p></blockquote><hr><a id="more"></a><h2 id="資料表建置"><a href="#資料表建置" class="headerlink" title="資料表建置"></a>資料表建置</h2><p>建置 model 和 migrate</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:model [Model Name] -m</span><br><span class="line">php artisan make:model People -m</span><br><span class="line"></span><br><span class="line">上述指令等同於下面兩句指令的簡化</span><br><span class="line">php artisan make:model People</span><br><span class="line">php artisan make:migration createPeopleTable</span><br></pre></td></tr></table></figure><h3 id="建置資料表的屬性"><a href="#建置資料表的屬性" class="headerlink" title="建置資料表的屬性"></a>建置資料表的屬性</h3><ol><li>調整migrate</li></ol><p>更改 function up 內容，使其在 migrate 時，可以建置相對應的屬性。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> database/migrations</span><br><span class="line">vim <span class="number">2020</span>_04_06_031647_create_people_table.php</span><br><span class="line"></span><br><span class="line">public function up()</span><br><span class="line">    &#123;</span><br><span class="line"><span class="function">        Schema::<span class="title">create</span>('<span class="title">people</span>', <span class="title">function</span> (<span class="title">Blueprint</span> $<span class="title">table</span>) &#123;</span></span><br><span class="line"><span class="function">            $<span class="title">table</span>-&gt;<span class="title">increments</span>('<span class="title">id</span>');</span></span><br><span class="line"><span class="function">            $<span class="title">table</span>-&gt;<span class="title">string</span>('<span class="title">name</span>',50);</span></span><br><span class="line"><span class="function">            $<span class="title">table</span>-&gt;<span class="title">integer</span>('<span class="title">age</span>');</span></span><br><span class="line"><span class="function">            $<span class="title">table</span>-&gt;<span class="title">string</span>('<span class="title">born</span>',20);</span></span><br><span class="line"><span class="function">            $<span class="title">table</span>-&gt;<span class="title">timestamps</span>();</span></span><br><span class="line"><span class="function">        &#125;);</span></span><br><span class="line"><span class="function">    &#125;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>執行 migrate</li></ol><p>執行所有未完成的migrations</p><blockquote><p>更多指令請<a href="https://dometi.com.tw/blog/laravel-beginner-10/" target="_blank" rel="noopener">參考連結</a></p></blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan migrate</span><br></pre></td></tr></table></figure><h3 id="資料填充"><a href="#資料填充" class="headerlink" title="資料填充"></a>資料填充</h3><ol><li>調整 model</li></ol><p>宣告屬性與資料表名稱</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> app</span><br><span class="line">vim People.php</span><br><span class="line"></span><br><span class="line">class People extends Model</span><br><span class="line">&#123;</span><br><span class="line">    protected $table = 'people';</span><br><span class="line"></span><br><span class="line">    protected $fillable = [</span><br><span class="line">        'name',</span><br><span class="line">        'age',</span><br><span class="line">        'born'</span><br><span class="line">    ];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>建置調整執行 Seeder </li></ol><p>建置 Seeder</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:seeder PeopleSeeder</span><br></pre></td></tr></table></figure><p>透過 Seeder來進行資料填充</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> database/seeds</span><br><span class="line">vim PeopleSeeder</span><br><span class="line"></span><br><span class="line">use App\People;</span><br><span class="line">class PeopleSeeder extends Seeder</span><br><span class="line">&#123;</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        $newPeople = new People();</span><br><span class="line">        $newPeople-&gt;name = 'frank';</span><br><span class="line">        $newPeople-&gt;age='<span class="number">25</span>';</span><br><span class="line">        $newPeople-&gt;born='<span class="number">1995</span>/<span class="number">04</span>/<span class="number">29</span>';</span><br><span class="line">        $newPeople-&gt;save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>將 Seeder 放入 DatabaseSeeder 來宣告執行</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim DatabaseSeeder.php</span><br><span class="line"></span><br><span class="line">$this-&gt;<span class="keyword">call</span>(PeopleSeeder::class);</span><br></pre></td></tr></table></figure><p>執行 Seeder 來給予資料庫資料</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan db:seed</span><br></pre></td></tr></table></figure><h3 id="Factory"><a href="#Factory" class="headerlink" title="Factory"></a>Factory</h3><p>除了手動給予數值外，可以透過factory來協助建置多比假資料。</p><ol><li><p>建置factory</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:factory PeopleFactory --model=People</span><br></pre></td></tr></table></figure></li><li><p>定義填充物</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">People</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Faker</span>\<span class="title">Generator</span> <span class="title">as</span> <span class="title">Faker</span>;</span><br><span class="line"></span><br><span class="line">$factory-&gt;define(People::class, <span class="function"><span class="keyword">function</span> <span class="params">(Faker $faker)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    $born = $faker-&gt;dateTimeBetween(<span class="string">'1990-01-01'</span>, <span class="string">'2012-12-31'</span>)</span><br><span class="line">    -&gt;format(<span class="string">'Y/m/d'</span>);</span><br><span class="line">    $age = call_user_func(<span class="function"><span class="keyword">function</span><span class="params">()</span> <span class="title">use</span><span class="params">( $born)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (date(<span class="string">'Y'</span>) - date(<span class="string">'Y'</span>, strtotime($born)));</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> [</span><br><span class="line">        <span class="string">'name'</span> =&gt; $faker-&gt;name,</span><br><span class="line">        <span class="string">'age'</span> =&gt; $age,</span><br><span class="line">        <span class="string">'born'</span> =&gt; $born</span><br><span class="line">    ];</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>放置 Seeder內執行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment"># 建一筆</span></span><br><span class="line">    factory(App/People::class)-&gt;create();</span><br><span class="line">    <span class="comment"># 直接建三筆</span></span><br><span class="line">    factory(App/People::class,<span class="number">3</span>)-&gt;create();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><p>本篇講述透過 migrate 建置資料表屬性，並透過 seeder 來進行資料填充，並且規劃好 model 以便在 curd 時，可以找到相對應的欄位資料。</p><p>下一步將需了解 <a href="https://laravel.tw/docs/5.0/eloquent" target="_blank" rel="noopener">Laravel Eloquent ORM</a>，透過此方法可以對於資料表欄位進行 curd 的動作，並且建置資料表之間的關聯。</p><p>可以透過 Laravel RESTful 資源控制器，來學習 ORM 對於資料庫的 curd 操作，可參考此 <a href="https://github.com/franksm/laravel_DB" target="_blank" rel="noopener">GitHub</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;編輯 : Frank&lt;br&gt;日期 : 2020/04/08&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
    
    
      <category term="PHP" scheme="http://franksm.github.io/tags/PHP/"/>
    
      <category term="Laravel" scheme="http://franksm.github.io/tags/Laravel/"/>
    
      <category term="DB" scheme="http://franksm.github.io/tags/DB/"/>
    
  </entry>
  
  <entry>
    <title>Week7 - CS50x (SQL)</title>
    <link href="http://franksm.github.io/2020/03/12/Week7-CS50x-SQL/"/>
    <id>http://franksm.github.io/2020/03/12/Week7-CS50x-SQL/</id>
    <published>2020-03-12T01:27:45.000Z</published>
    <updated>2020-04-15T01:29:57.788Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>編輯 : Frank<br>日期 : 2020/03/12<br><a href="https://cs50.harvard.edu/x/2020/weeks/7/" target="_blank" rel="noopener">參考網址</a></p></blockquote><hr><a id="more"></a><h2 id="Favorite-TV"><a href="#Favorite-TV" class="headerlink" title="Favorite TV"></a>Favorite TV</h2><blockquote><p><a href="https://docs.google.com/forms/d/1_Vf4i_k-33Xn_ZtbcTgN4qdZu9CrLnStsDs1lykGGVs/prefill" target="_blank" rel="noopener">表單連結</a><br><a href="https://docs.google.com/spreadsheets/d/1a0_MfHBPX9yhq6hZojSL0TXUfjjUKNi4KRuNuDst3bI/edit?usp=sharing" target="_blank" rel="noopener">試算表連結</a></p></blockquote><p><img src="https://i.imgur.com/DCSzx6h.png" alt></p><h2 id="分析與統計群眾的喜愛節目"><a href="#分析與統計群眾的喜愛節目" class="headerlink" title="分析與統計群眾的喜愛節目"></a>分析與統計群眾的喜愛節目</h2><blockquote><p>透過將excel檔案匯出成csv將更好進行後續操作。</p></blockquote><h3 id="方法1-編程"><a href="#方法1-編程" class="headerlink" title="方法1: 編程"></a>方法1: 編程</h3><p><strong>流程規劃</strong></p><ol><li>讀取檔案 favoritetv.csv</li><li>抓取各列title資訊</li><li>統計次數</li><li>排列與顯示</li></ol><p>這樣的操作過程是繁瑣對吧？是否能使用不同工具與語言來更好實踐它?對於 SQL 而言，這個答案是肯定的</p><p>favorites_03.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line">counts = &#123;&#125;</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"favoritetv.csv"</span>, <span class="string">"r"</span>) <span class="keyword">as</span> file:</span><br><span class="line">  reader = csv.DictReader(file)</span><br><span class="line">  <span class="keyword">for</span> row <span class="keyword">in</span> reader:</span><br><span class="line">    title = row[<span class="string">"title"</span>]</span><br><span class="line">    <span class="keyword">if</span> title <span class="keyword">in</span> counts:</span><br><span class="line">      counts[title] += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      counts[title] = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> title, count <span class="keyword">in</span> sorted(counts.items(),key=<span class="keyword">lambda</span> item: item[<span class="number">1</span>],reverse=<span class="literal">True</span>):</span><br><span class="line">  print(title, count, sep=<span class="string">" | "</span>)</span><br></pre></td></tr></table></figure><p><strong>額外補充</strong><br>pandas 也能進行良好的統計分析，但開檔讀檔仍需耗費相當龐大的開銷因此數據還是存在 SQL 才是上上策</p><p>favorites_4.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">"favoritetv.csv"</span>)</span><br><span class="line">print(df[<span class="string">'title'</span>].value_counts())</span><br></pre></td></tr></table></figure><h3 id="方法2-SQL"><a href="#方法2-SQL" class="headerlink" title="方法2: SQL"></a>方法2: SQL</h3><blockquote><p>影片時間: 20:15</p></blockquote><p><strong>前置作業</strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//創建Table</span><br><span class="line">sqlite3 favorites.db</span><br><span class="line">sqlite &gt; .<span class="built_in">mode</span> csv</span><br><span class="line">sqlite &gt; .import "favoritetv.csv" favorites</span><br></pre></td></tr></table></figure><p><strong>資料統計與分析</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//Table的格式</span><br><span class="line">sqlite&gt; .schema</span><br><span class="line"></span><br><span class="line">//新增修改刪除</span><br><span class="line"><span class="keyword">SELECT</span> title <span class="keyword">FROM</span> favorites;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> title, <span class="keyword">COUNT</span>(title) <span class="keyword">FROM</span> favorites</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> title;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> title, <span class="keyword">COUNT</span>(title) <span class="keyword">as</span> n <span class="keyword">FROM</span> favorites</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> title</span><br><span class="line">    <span class="keyword">ORDER</span> <span class="keyword">BY</span> n <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h2 id="SQL-介紹"><a href="#SQL-介紹" class="headerlink" title="SQL 介紹"></a>SQL 介紹</h2><h3 id="優點"><a href="#優點" class="headerlink" title="優點"></a>優點</h3><h4 id="簡易"><a href="#簡易" class="headerlink" title="簡易"></a>簡易</h4><p>SQL 可以達成更簡易的搜尋，對於數據的分析將不用進行複雜的python編寫。<br>SQL 處理數據時，我們僅需要四個操作：</p><ul><li>創建: INSERT</li><li>讀取: SELECT</li><li>更新: UPDATE</li><li>刪除: DELETE</li></ul><h4 id="快速"><a href="#快速" class="headerlink" title="快速"></a>快速</h4><p>此外 SQL 是關係數據庫，我們將不必依賴csv文件檔案。每次csv使用時需開啟文件，並進行逐行的迭代，當csv文件包含大量數據時，這將變得很慢，SQL將提供更快的訪問權限。</p><h3 id="功能介紹"><a href="#功能介紹" class="headerlink" title="功能介紹"></a>功能介紹</h3><h4 id="數據類型"><a href="#數據類型" class="headerlink" title="數據類型"></a>數據類型</h4><p>SQL 有不同大小的數據類型，這樣可以對於數據進行更良好的管理以避免惡意的操作來淹沒計算內存，這也許將會要造成服務器崩潰。</p><p>INTEGER</p><ul><li>smallint</li><li>integer</li><li>bigint</li></ul><h4 id="指令功能"><a href="#指令功能" class="headerlink" title="指令功能"></a>指令功能</h4><p>SQL 除了四個操作指令外，還包含許多好用功能能讓數據科學家能快速的分析與統計所需的操作。</p><p>好用的功能</p><ul><li>GROUP BY</li><li>ORDER BY</li><li>COUNT</li><li>DESC</li></ul><h2 id="IMDb"><a href="#IMDb" class="headerlink" title="IMDb"></a>IMDb</h2><p>IMDb 是一個關於電影演員、電影、電視節目、電視藝人、電子遊戲和電影製作小組的線上資料庫。</p><h3 id="統計與分析IMDb"><a href="#統計與分析IMDb" class="headerlink" title="統計與分析IMDb"></a>統計與分析IMDb</h3><p>在開始之前請先下載 <a href="https://datasets.imdbws.com" target="_blank" rel="noopener">title.basics.tsv.gz</a></p><h4 id="統計2019年的喜劇節目數量。"><a href="#統計2019年的喜劇節目數量。" class="headerlink" title="統計2019年的喜劇節目數量。"></a>統計2019年的喜劇節目數量。</h4><p>single_tables.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cs50</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create database by opening and closing an empty file first</span></span><br><span class="line">open(<span class="string">f"shows3.db"</span>, <span class="string">"w"</span>).close()</span><br><span class="line">db = cs50.SQL(<span class="string">"sqlite:///shows3.db"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create table called `shows`, and specify the columns we want,</span></span><br><span class="line"><span class="comment"># all of which will be text except `startYear`</span></span><br><span class="line">db.execute(<span class="string">"CREATE TABLE shows (tconst TEXT, primaryTitle TEXT, startYear NUMERIC, genres TEXT)"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Open TSV file</span></span><br><span class="line"><span class="comment"># https://datasets.imdbws.com/title.basics.tsv.gz</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"title.basics.tsv"</span>, <span class="string">"r"</span>) <span class="keyword">as</span> titles:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create DictReader</span></span><br><span class="line">    reader = csv.DictReader(titles, delimiter=<span class="string">"\t"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Iterate over TSV file</span></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> reader:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># If non-adult TV show</span></span><br><span class="line">        <span class="keyword">if</span> row[<span class="string">"titleType"</span>] == <span class="string">"tvSeries"</span> <span class="keyword">and</span> row[<span class="string">"isAdult"</span>] == <span class="string">"0"</span>:</span><br><span class="line"></span><br><span class="line">            <span class="comment"># If year not missing</span></span><br><span class="line">            <span class="keyword">if</span> row[<span class="string">"startYear"</span>] != <span class="string">"\\N"</span>:</span><br><span class="line"></span><br><span class="line">                <span class="comment"># If since 1970</span></span><br><span class="line">                startYear = int(row[<span class="string">"startYear"</span>])</span><br><span class="line">                <span class="keyword">if</span> startYear &gt;= <span class="number">1970</span>:</span><br><span class="line"></span><br><span class="line">                    <span class="comment"># Insert show by substituting values into each ? placeholder</span></span><br><span class="line">                    db.execute(<span class="string">"INSERT INTO shows (tconst, primaryTitle, startYear, genres) VALUES(?, ?, ?, ?)"</span>,</span><br><span class="line">                               row[<span class="string">"tconst"</span>], row[<span class="string">"primaryTitle"</span>], startYear, row[<span class="string">"genres"</span>])</span><br></pre></td></tr></table></figure><p><strong>Table格式</strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sqlite3 show3.db</span><br><span class="line">sqlite &gt; .schema</span><br><span class="line"></span><br><span class="line">CREATE TABLE shows (id INT, <span class="built_in">title</span> TEXT, year NUMERIC, genre TEXT);</span><br></pre></td></tr></table></figure><p><strong>資料統計與分析</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">From</span> shows <span class="keyword">WHERE</span> genere =<span class="string">"Comdy"</span> <span class="keyword">AND</span> <span class="keyword">year</span> = <span class="number">2019</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">From</span> shows <span class="keyword">WHERE</span> genere <span class="keyword">LIKE</span> <span class="string">"%Comdy%"</span> <span class="keyword">AND</span> <span class="keyword">year</span> = <span class="number">2019</span>;</span><br></pre></td></tr></table></figure><p>這樣的方式並不可靠，可能存在某種類型也包含Comdy這個單字，如果能僅搜尋genre的特定表單，這將可以解決這一問題。因此以下將多創立一個genre獨立表單來存取資料，並透過id來串連彼此的關係。</p><p><img src="https://i.imgur.com/SeV6Aon.png" alt></p><p>multipl_tables.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cs50</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create database</span></span><br><span class="line">open(<span class="string">f"shows4.db"</span>, <span class="string">"w"</span>).close()</span><br><span class="line">db = cs50.SQL(<span class="string">"sqlite:///shows4.db"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create tables</span></span><br><span class="line">db.execute(<span class="string">"CREATE TABLE shows (id INT, title TEXT, year NUMERIC, PRIMARY KEY(id))"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># The `genres` table will have a column called `show_id` that references</span></span><br><span class="line"><span class="comment"># the `shows` table above</span></span><br><span class="line">db.execute(<span class="string">"CREATE TABLE genres (show_id INT, genre TEXT, FOREIGN KEY(show_id) REFERENCES shows(id))"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Open TSV file</span></span><br><span class="line"><span class="comment"># https://datasets.imdbws.com/title.basics.tsv.gz</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"title.basics.tsv"</span>, <span class="string">"r"</span>) <span class="keyword">as</span> titles:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create DictReader</span></span><br><span class="line">    reader = csv.DictReader(titles, delimiter=<span class="string">"\t"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Iterate over TSV file</span></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> reader:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># If non-adult TV show</span></span><br><span class="line">        <span class="keyword">if</span> row[<span class="string">"titleType"</span>] == <span class="string">"tvSeries"</span> <span class="keyword">and</span> row[<span class="string">"isAdult"</span>] == <span class="string">"0"</span>:</span><br><span class="line"></span><br><span class="line">            <span class="comment"># If year not missing</span></span><br><span class="line">            <span class="keyword">if</span> row[<span class="string">"startYear"</span>] != <span class="string">"\\N"</span>:</span><br><span class="line"></span><br><span class="line">                <span class="comment"># If since 1970</span></span><br><span class="line">                startYear = int(row[<span class="string">"startYear"</span>])</span><br><span class="line">                <span class="keyword">if</span> startYear &gt;= <span class="number">1970</span>:</span><br><span class="line"></span><br><span class="line">                    <span class="comment"># Trim prefix from tconst</span></span><br><span class="line">                    id = int(row[<span class="string">"tconst"</span>][<span class="number">2</span>:])</span><br><span class="line"></span><br><span class="line">                    <span class="comment"># Insert show</span></span><br><span class="line">                    db.execute(<span class="string">"INSERT INTO shows (id, title, year) VALUES(?, ?, ?)"</span>, id, row[<span class="string">"primaryTitle"</span>], startYear)</span><br><span class="line"></span><br><span class="line">                    <span class="comment"># Insert genres</span></span><br><span class="line">                    <span class="keyword">if</span> row[<span class="string">"genres"</span>] != <span class="string">"\\N"</span>:</span><br><span class="line">                        <span class="keyword">for</span> genre <span class="keyword">in</span> row[<span class="string">"genres"</span>].split(<span class="string">","</span>):</span><br><span class="line">                            db.execute(<span class="string">"INSERT INTO genres (show_id, genre) VALUES(?, ?)"</span>, id, genre)</span><br></pre></td></tr></table></figure><p><strong>Table格式</strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sqlite3 show4.db</span><br><span class="line">sqlite &gt; .schema</span><br><span class="line"></span><br><span class="line">CREATE TABLE shows (id INT, <span class="built_in">title</span> TEXT, year NUMERIC, PRIMARY KEY(id));</span><br><span class="line">CREATE TABLE genres (show_id INT, genre TEXT, FOREIGN KEY(show_id) REFERENCES shows(id));</span><br></pre></td></tr></table></figure><p><strong>genre擷取</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> genres <span class="keyword">WHERE</span> show_id = <span class="keyword">id</span></span><br></pre></td></tr></table></figure><p><strong>資料統計與分析</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> shows</span><br><span class="line">    <span class="keyword">WHERE</span> <span class="keyword">id</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> show_id <span class="keyword">FROM</span> genres <span class="keyword">WHERE</span> genre = <span class="string">"Comedy"</span>)</span><br><span class="line">    <span class="keyword">AND</span> <span class="keyword">year</span> = <span class="number">2019</span>;</span><br></pre></td></tr></table></figure><p><strong>特殊類型</strong><br><img src="https://i.imgur.com/SeV6Aon.png" alt></p><p>id = PRIMARY KEY<br>show_id = FOREIGN KEY</p><p>種類</p><ul><li>PRIMARY KEY: 主鍵</li><li>FOREIGN KEY: 外來鍵</li><li>UNIQUE: 唯一值</li><li>INDEX: 索引值</li></ul><p>創建索引值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> show_index <span class="keyword">ON</span> genres (show_id);</span><br></pre></td></tr></table></figure><p>在沒有索引值時，SQL 會檢查每個元素，透過透過線性搜索。使用索引值後，SQL 透過B-Tree來搜索，可加速執行速度。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;編輯 : Frank&lt;br&gt;日期 : 2020/03/12&lt;br&gt;&lt;a href=&quot;https://cs50.harvard.edu/x/2020/weeks/7/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;參考網址&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="http://franksm.github.io/tags/Python/"/>
    
      <category term="SQL" scheme="http://franksm.github.io/tags/SQL/"/>
    
      <category term="sqlite3" scheme="http://franksm.github.io/tags/sqlite3/"/>
    
  </entry>
  
  <entry>
    <title>Python Django API (rest)</title>
    <link href="http://franksm.github.io/2019/09/19/Python-Django-API-rest/"/>
    <id>http://franksm.github.io/2019/09/19/Python-Django-API-rest/</id>
    <published>2019-09-19T09:17:31.000Z</published>
    <updated>2020-04-14T09:25:09.887Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>編輯 : Frank<br>日期 : 2019/09/09<br><a href="https://github.com/twtrubiks/django-rest-framework-tutorial" target="_blank" rel="noopener">參考網址</a></p></blockquote><hr><a id="more"></a><h2 id="最終成果"><a href="#最終成果" class="headerlink" title="最終成果"></a>最終成果</h2><h3 id="op-a-1-amp-b-2"><a href="#op-a-1-amp-b-2" class="headerlink" title="op (?a=1&amp;b=2)"></a>op (?a=1&amp;b=2)</h3><p><img src="https://i.imgur.com/BL7zf9I.png" alt></p><h3 id="op2-a-b"><a href="#op2-a-b" class="headerlink" title="op2 (/a/b)"></a>op2 (/a/b)</h3><p><img src="https://i.imgur.com/bKbmiM2.png" alt></p><h2 id="組織圖"><a href="#組織圖" class="headerlink" title="組織圖"></a>組織圖</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">restapi</span><br><span class="line">    +</span><br><span class="line">    |</span><br><span class="line">    +-----&gt; manage.py</span><br><span class="line">    |</span><br><span class="line">    +-----&gt; db.sqlite3</span><br><span class="line">    |</span><br><span class="line">    +-----&gt; restapi</span><br><span class="line">    |           +</span><br><span class="line">    |           |</span><br><span class="line">    |           +-----&gt; __init__.py</span><br><span class="line">    |           |</span><br><span class="line">    |           +-----&gt; setting.py</span><br><span class="line">    |           |</span><br><span class="line">    |           +-----&gt; urls.py</span><br><span class="line">    |           |</span><br><span class="line">    |           +-----&gt; wsgi.py</span><br><span class="line">    |</span><br><span class="line">    +-----&gt; api</span><br><span class="line">             +</span><br><span class="line">             |</span><br><span class="line">             +-----&gt; admin.py</span><br><span class="line">             |</span><br><span class="line">             +-----&gt; __init__.py</span><br><span class="line">             |</span><br><span class="line">             +-----&gt; models.py</span><br><span class="line">             |</span><br><span class="line">             +-----&gt; urls.py</span><br><span class="line">             |</span><br><span class="line">             +-----&gt; views.py</span><br><span class="line">             |</span><br><span class="line">             +-----&gt; apps.pu</span><br><span class="line">             |</span><br><span class="line">             +-----&gt; tests.py</span><br></pre></td></tr></table></figure><blockquote><p>啟動 : python3 manage.py runserver<br>連接 : 127.0.0.1:8000/api<br>畫圖工具 : <a href="http://stable.ascii-flow.appspot.com/#Draw" target="_blank" rel="noopener">http://stable.ascii-flow.appspot.com/#Draw</a></p></blockquote><h2 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h2><p>python 3<br>django 2.2</p><h2 id="套件"><a href="#套件" class="headerlink" title="套件"></a>套件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip3 install django</span><br><span class="line">pip3 install djangorestframework</span><br></pre></td></tr></table></figure><h2 id="Django專案"><a href="#Django專案" class="headerlink" title="Django專案"></a>Django專案</h2><blockquote><p>django-admin startproject restapi</p></blockquote><p>/restapi/settings.py 添加restframework與自定義的apps</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">'rest_framework'</span>,</span><br><span class="line">    <span class="string">'api.apps.ApiConfig'</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>/restapi/urls.py 添加網址路徑</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">'api-auth/'</span>,include(<span class="string">'rest_framework.urls'</span>)),</span><br><span class="line">    path(<span class="string">'api/'</span>,include(<span class="string">'api.urls'</span>))</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="Django-Apps"><a href="#Django-Apps" class="headerlink" title="Django Apps"></a>Django Apps</h2><blockquote><p>python3 manage.py startapp api</p></blockquote><p>/api/views</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> rest_framework.decorators <span class="keyword">import</span> api_view,throttle_classes,permission_clas$</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> rest_framework.throttling <span class="keyword">import</span> UserRateThrottle</span><br><span class="line"><span class="keyword">from</span> rest_framework.permissions <span class="keyword">import</span> IsAuthenticated</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 每天只能使用一次</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OncePerDayUserThrottle</span><span class="params">(UserRateThrottle)</span>:</span></span><br><span class="line">        rate = <span class="string">'1/day'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@api_view(['GET'])</span></span><br><span class="line"><span class="meta">@permission_classes((IsAuthenticated, )) # 授權設置,需登入使用</span></span><br><span class="line"><span class="comment">#@throttle_classes([OncePerDayUserThrottle]) # 設定調用限制</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">op</span><span class="params">(request,format=None)</span>:</span></span><br><span class="line">    number1 = request.GET.get(<span class="string">'number1'</span>)</span><br><span class="line">    number2 = request.GET.get(<span class="string">'number2'</span>)</span><br><span class="line"></span><br><span class="line">    add = int(number1) + int(number2)</span><br><span class="line">    <span class="keyword">return</span> Response(&#123;<span class="string">"add"</span>:add&#125;)</span><br><span class="line"></span><br><span class="line"><span class="meta">@api_view(['GET'])</span></span><br><span class="line"><span class="meta">@permission_classes((IsAuthenticated, )) # 授權設置,需登入使用</span></span><br><span class="line"><span class="comment">#@throttle_classes([OncePerDayUserThrottle]) # 設定調用限制</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">op2</span><span class="params">(request,a=<span class="number">0</span>,b=<span class="number">0</span>)</span>:</span></span><br><span class="line">    add = int(a) + int(b)</span><br><span class="line">    <span class="keyword">return</span> Response(&#123;<span class="string">"add"</span>:add&#125;)</span><br></pre></td></tr></table></figure><p>/api/urls.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, include</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">        path(<span class="string">'op'</span>,views.op,name=<span class="string">'op'</span>),</span><br><span class="line">        path(<span class="string">'op2/&lt;int:a&gt;/&lt;int:b&gt;'</span>,views.op2,name=<span class="string">'op2'</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="授權"><a href="#授權" class="headerlink" title="授權"></a>授權</h2><p>由於有對於api進行授權設置,因此在需先提前為django註冊用戶</p><blockquote><p>python3 manage.py createsuperuser</p></blockquote><p>如若無進行登入則無法使用api,如下圖：</p><p><img src="https://i.imgur.com/IMhHIXQ.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;編輯 : Frank&lt;br&gt;日期 : 2019/09/09&lt;br&gt;&lt;a href=&quot;https://github.com/twtrubiks/django-rest-framework-tutorial&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;參考網址&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="http://franksm.github.io/tags/Python/"/>
    
      <category term="Django" scheme="http://franksm.github.io/tags/Django/"/>
    
      <category term="API" scheme="http://franksm.github.io/tags/API/"/>
    
  </entry>
  
  <entry>
    <title>TX2刷機與Pytorch安裝</title>
    <link href="http://franksm.github.io/2019/08/21/TX2%E5%88%B7%E6%A9%9F%E8%88%87Pytorch%E5%AE%89%E8%A3%9D/"/>
    <id>http://franksm.github.io/2019/08/21/TX2%E5%88%B7%E6%A9%9F%E8%88%87Pytorch%E5%AE%89%E8%A3%9D/</id>
    <published>2019-08-21T10:23:19.000Z</published>
    <updated>2019-08-31T20:59:24.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>編輯 : Frnak<br>日期 : 2019/08/21</p></blockquote><hr><a id="more"></a><h3 id="風扇調整"><a href="#風扇調整" class="headerlink" title="風扇調整"></a>風扇調整</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo nvpmodel -m 0         # 切换工作模式到最大</span><br><span class="line">sudo  ~/jetson_clocks.sh   # 强制开启风扇最大转速</span><br></pre></td></tr></table></figure><h3 id="刷機"><a href="#刷機" class="headerlink" title="刷機"></a>刷機</h3><p><a href="http://www.honghutech.com/nvidia-jeston-tx2/flashtx2" target="_blank" rel="noopener">參考文獻</a><br>JetPack-L4T-3.3-linux-x64_b39.run<br><img src="https://i.imgur.com/EGqDGZh.jpg" alt></p><blockquote><p>執行到此步驟時，需要設定ubuntu主機與TX2的網路設置，才可順利繼續進行</p></blockquote><p><img src="https://i.imgur.com/1EXxJod.jpg" alt></p><blockquote><p>執行到此步驟即可關閉小黑窗，結束刷機的執行</p></blockquote><h3 id="Pytorch"><a href="#Pytorch" class="headerlink" title="Pytorch"></a>Pytorch</h3><p><a href="https://www.ncnynl.com/archives/201706/1755.html" target="_blank" rel="noopener">參考文獻(安裝)</a><br><a href="https://oldpan.me/archives/nvidia-jetson-tx2-source-build-pytorch" target="_blank" rel="noopener">參考文獻(安裝)</a><br><a href="https://blog.csdn.net/accumulate_zhang/article/details/80269313" target="_blank" rel="noopener">參考文獻(pip3 Error)</a></p><p>Version: 1.0.0</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"># 對剛刷完機的機器進行套件更新</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br><span class="line">sudo apt-get dist-upgrade -y</span><br><span class="line">sudo apt autoremove</span><br><span class="line"></span><br><span class="line"># 下載pytorch包</span><br><span class="line">git clone http://github.com/pytorch/pytorch</span><br><span class="line"><span class="built_in">cd</span> pytorch/</span><br><span class="line">git checkout -b v1.<span class="number">0</span>.<span class="number">0</span> v1.<span class="number">0</span>.<span class="number">0</span></span><br><span class="line"></span><br><span class="line"># 安裝pip3</span><br><span class="line">sudo apt-get install python3-pip</span><br><span class="line"></span><br><span class="line"># 對第三方庫進行更新</span><br><span class="line">sudo pip3 install -U setuptools</span><br><span class="line">sudo pip3 install -r requirements.txt</span><br><span class="line">git submodule update --init --recursive</span><br><span class="line"></span><br><span class="line"># 設定CUDNN路徑</span><br><span class="line">sudo gedit ~/.bashrc</span><br><span class="line">export CUDNN_LIB_DIR=/usr/lib/aarch64-linux-gnu</span><br><span class="line">export CUDNN_INCLUDE_DIR=/usr/include</span><br><span class="line">source ~/.bashrc</span><br><span class="line"></span><br><span class="line">sudo apt-get install python3-dev</span><br><span class="line"></span><br><span class="line"># 更新pip3及解決pip3 Error問題</span><br><span class="line">sudo pip3 install --upgrade pip</span><br><span class="line">sudo vi /usr/bin/pip3</span><br><span class="line">from pip import __main__</span><br><span class="line"><span class="keyword">if</span> __name__ == '__main__':</span><br><span class="line">    sys.<span class="keyword">exit</span>(__main__._main())</span><br><span class="line"></span><br><span class="line"># 安裝相關處理套件</span><br><span class="line">sudo pip3 install numpy</span><br><span class="line">sudo apt-get install python3-pandas</span><br><span class="line">sudo pip3 install scikit-build</span><br><span class="line">sudo apt-get -y install cmake</span><br><span class="line">sudo apt install libffi-dev</span><br><span class="line">sudo pip3 install cffi</span><br><span class="line"></span><br><span class="line"># 編譯與執行 (需跑兩小時以上)</span><br><span class="line"># 最後會跑出WARNING: 'develop' is <span class="keyword">not</span> building C++ code incrementally，可無視</span><br><span class="line">sudo python3 setup.py build_deps</span><br><span class="line">sudo python3 setup.py develop</span><br></pre></td></tr></table></figure><h3 id="補充圖片"><a href="#補充圖片" class="headerlink" title="補充圖片"></a>補充圖片</h3><p><img src="https://i.imgur.com/zIUdGRK.png" alt></p><blockquote><p>透過git指令觀看可選擇的PyTorch版本及確認目前的git狀態</p></blockquote><p><img src="https://i.imgur.com/XpeBinA.png" alt></p><blockquote><p>設定網路，確認無人使用IP填入Address和Gateway中</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;編輯 : Frnak&lt;br&gt;日期 : 2019/08/21&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
    
    
      <category term="TX2" scheme="http://franksm.github.io/tags/TX2/"/>
    
      <category term="Edge Computing" scheme="http://franksm.github.io/tags/Edge-Computing/"/>
    
      <category term="PyTorch" scheme="http://franksm.github.io/tags/PyTorch/"/>
    
  </entry>
  
  <entry>
    <title>D3.js基礎(考試成績情境)</title>
    <link href="http://franksm.github.io/2019/08/14/D3-js%E5%9F%BA%E7%A4%8E-%E8%80%83%E8%A9%A6%E6%88%90%E7%B8%BE%E6%83%85%E5%A2%83/"/>
    <id>http://franksm.github.io/2019/08/14/D3-js%E5%9F%BA%E7%A4%8E-%E8%80%83%E8%A9%A6%E6%88%90%E7%B8%BE%E6%83%85%E5%A2%83/</id>
    <published>2019-08-14T08:49:23.000Z</published>
    <updated>2019-08-31T20:59:22.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>編輯 : Frank<br>日期 : 2019/08/14<br><a href="http://wiki.jikexueyuan.com/project/d3wiki/makechart.html" target="_blank" rel="noopener">參考網址</a></p></blockquote><hr><a id="more"></a><h3 id="範例情境"><a href="#範例情境" class="headerlink" title="範例情境"></a>範例情境</h3><p>製作考試成績的長條圖至網頁中呈現，並根據成績給予不同顏色顯示。</p><h3 id="使用D3-js"><a href="#使用D3-js" class="headerlink" title="使用D3.js"></a>使用D3.js</h3><h4 id="掛載-d3-js"><a href="#掛載-d3-js" class="headerlink" title="掛載 d3.js"></a>掛載 d3.js</h4><p>在開始寫d3.js之前，記得在html中掛載d3.js套件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;https://d3js.org/d3.v4.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="添加svg畫布"><a href="#添加svg畫布" class="headerlink" title="添加svg畫布"></a>添加svg畫布</h4><p>定義圖形的長和寬，並且創建SVG畫布。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var svg_width = 500;</span><br><span class="line">var svg_height = 500;</span><br><span class="line">var bar_padding = 5</span><br><span class="line"></span><br><span class="line">var svg = d3.select("body")</span><br><span class="line">    .append("svg")</span><br><span class="line">    .attr("width",svg_width)</span><br><span class="line">    .attr("height",svg_height);</span><br></pre></td></tr></table></figure><h4 id="成績資料集"><a href="#成績資料集" class="headerlink" title="成績資料集"></a>成績資料集</h4><p>定義一個成績資料集。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var dataset = [88,96,73,61,42,77,69,51,49];</span><br></pre></td></tr></table></figure><p>d3.js讀取外部檔案</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">file = &apos;dataset.json&apos;</span><br><span class="line">d3.json(file,function(error,dataset)&#123;</span><br><span class="line">    //d3.js繪圖程式寫至裡面</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="長條圖繪製"><a href="#長條圖繪製" class="headerlink" title="長條圖繪製"></a>長條圖繪製</h4><p>通過svg來製作相對應的圖形，給予圖形屬性、成績資料、長條圖x,y軸位置和長條圖長寬。</p><p>svg屬性添加:</p><ul><li>x,y : 圖形位置</li><li>width,height : 圖形大小</li><li>fill : 圖形顏色</li></ul><p>屬性function參數:</p><ol><li>成績資料</li><li>第幾位學生</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">svg.selectAll("rect") //選擇svg內所有矩形</span><br><span class="line">    .data(dataset) //綁定資料</span><br><span class="line">    .enter() // 自動生成元素數量</span><br><span class="line">    .append("rect") //添加足夠的矩形元素</span><br><span class="line">    .attr("x",function(d,i)&#123;</span><br><span class="line">        return i * (svg_width / dataset.length);</span><br><span class="line">    &#125;)</span><br><span class="line">    .attr("y",function(d)&#123;</span><br><span class="line">        return svg_height - (d*4);</span><br><span class="line">    &#125;)</span><br><span class="line">    .attr("width",svg_width / dataset.length - bar_padding)</span><br><span class="line">    .attr("height",function(d)&#123;</span><br><span class="line">        return d *4;</span><br><span class="line">    &#125;)</span><br><span class="line">    .attr("fill",function(d)&#123;</span><br><span class="line">        return "rgb(" + d * 3 + " , 0 , 0)";</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>除了繪製圖形外，也需要幫助圖形添加相對應的文字敘述，在這裡示範把分數附在長條圖中。</p><p>svg屬性添加</p><ul><li>x,y : 文字位置</li><li>text-anchor : 文字位置</li><li>font-family : 文字樣式</li><li>font-size : 文字大小</li><li>fill : 文字顏色</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">svg.selectAll("text")</span><br><span class="line">    .data(dataset)</span><br><span class="line">    .enter()</span><br><span class="line">    .append("text")</span><br><span class="line">    .text(function(d)&#123;</span><br><span class="line">        return d;</span><br><span class="line">    &#125;)</span><br><span class="line">    .attr("text-anchor","middle")</span><br><span class="line">    .attr("x",function(d,i)&#123;</span><br><span class="line">        return i * (svg_width / dataset.length) + (svg_width / dataset.length - bar_padding)/2;</span><br><span class="line">    &#125;)</span><br><span class="line">    .attr("y",function(d)&#123;</span><br><span class="line">        return svg_height - (d*4) +20 ;</span><br><span class="line">    &#125;)</span><br><span class="line">    .attr("font-family","sans-serif")</span><br><span class="line">    .attr("font-size","20px")</span><br><span class="line">    .attr("fill","white")</span><br></pre></td></tr></table></figure><h3 id="最終成果"><a href="#最終成果" class="headerlink" title="最終成果"></a>最終成果</h3><p>使用d3.js來繪製成績長條圖，並在圖形上顯示相對應的文字描述，此外還根據成績來改變長條圖顏色。<br><img src="https://i.imgur.com/Ko9rmUk.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;編輯 : Frank&lt;br&gt;日期 : 2019/08/14&lt;br&gt;&lt;a href=&quot;http://wiki.jikexueyuan.com/project/d3wiki/makechart.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;參考網址&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
    
    
      <category term="D3.js" scheme="http://franksm.github.io/tags/D3-js/"/>
    
      <category term="Visualizing" scheme="http://franksm.github.io/tags/Visualizing/"/>
    
  </entry>
  
  <entry>
    <title>Python Scrapy基礎 (火車訂票情境)</title>
    <link href="http://franksm.github.io/2019/08/13/Python-Scrapy%E5%9F%BA%E7%A4%8E-%E7%81%AB%E8%BB%8A%E8%A8%82%E7%A5%A8%E6%83%85%E5%A2%83/"/>
    <id>http://franksm.github.io/2019/08/13/Python-Scrapy%E5%9F%BA%E7%A4%8E-%E7%81%AB%E8%BB%8A%E8%A8%82%E7%A5%A8%E6%83%85%E5%A2%83/</id>
    <published>2019-08-12T16:04:27.000Z</published>
    <updated>2019-08-31T20:59:24.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>編輯 : Frank<br>日期 : 2019/08/13<br><a href="https://www.maxlist.xyz/2018/08/25/python_scrapy_ptt/" target="_blank" rel="noopener">參考網址</a></p></blockquote><hr><a id="more"></a><h3 id="範例情境"><a href="#範例情境" class="headerlink" title="範例情境"></a>範例情境</h3><p>爬取火車時刻表網頁的資料，根據給予的參數來獲取相對應的數據資料。</p><h3 id="開啟Scrapy專案"><a href="#開啟Scrapy專案" class="headerlink" title="開啟Scrapy專案"></a>開啟Scrapy專案</h3><p>透過指令來創建專案</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy startproject train_timetable</span><br></pre></td></tr></table></figure><p>創建後會產生以下檔案</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">train_timetable/</span><br><span class="line">  +</span><br><span class="line">  |</span><br><span class="line">  +---------&gt; scrapy.cfg</span><br><span class="line">  |</span><br><span class="line">  +---------&gt; train_timetable/</span><br><span class="line">                +</span><br><span class="line">                |</span><br><span class="line">                +----------&gt; __init__.py</span><br><span class="line">                |</span><br><span class="line">                +----------&gt; items.py</span><br><span class="line">                |</span><br><span class="line">                +----------&gt; middlewares.py</span><br><span class="line">                |</span><br><span class="line">                +----------&gt; pipelines.py</span><br><span class="line">                |</span><br><span class="line">                +----------&gt; settings.py</span><br><span class="line">                |</span><br><span class="line">                +----------&gt; spiders</span><br><span class="line">                               +</span><br><span class="line">                               |</span><br><span class="line">                               +----------&gt; __init__.py</span><br></pre></td></tr></table></figure><p>執行爬蟲</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy crawl train_timetable</span><br></pre></td></tr></table></figure><h3 id="撰寫Scrapy爬蟲"><a href="#撰寫Scrapy爬蟲" class="headerlink" title="撰寫Scrapy爬蟲"></a>撰寫Scrapy爬蟲</h3><h4 id="設置-item-py"><a href="#設置-item-py" class="headerlink" title="設置 item.py"></a>設置 item.py</h4><p>首先先定義需要抓取的項目內容，包含火車車種、車次、發車站終點站、開車時間、到達時間等等。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TrainTimetableItem</span><span class="params">(scrapy.Item)</span>:</span></span><br><span class="line">    <span class="comment"># define the fields for your item here like:</span></span><br><span class="line">    <span class="comment"># name = scrapy.Field()</span></span><br><span class="line"></span><br><span class="line">        trainType = scrapy.Field()</span><br><span class="line">        trainClass = scrapy.Field()</span><br><span class="line">        startStation = scrapy.Field()</span><br><span class="line">        endStation = scrapy.Field()</span><br><span class="line">        startTime = scrapy.Field()</span><br><span class="line">        arrivalTime = scrapy.Field()</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h4 id="設置-spiders-crawler-py"><a href="#設置-spiders-crawler-py" class="headerlink" title="設置 spiders/crawler.py"></a>設置 spiders/crawler.py</h4><p>首先先在spiders資料夾內創建主要爬蟲程式，在程式內通過scrapy來建立一個Class繼承scrapy.Spider，隨後進行爬蟲資料的捕捉。</p><p>scrapy.Spider屬性:</p><ul><li>name : 爬蟲名稱</li><li>allowed_domains : 允許網域</li><li>start_urls : 爬取的網址</li></ul><p>scrapy請求:</p><ul><li>Request : GET</li><li>FormRequest : POST</li></ul><p>scrapy選擇器:</p><ul><li>css</li><li>xpath</li></ul><p>通過 FormRequest與相對應的payload和url來獲取檔案，並透過callback來進行資料的回報。<br>透過xpath來捕捉網頁script資訊內的火車班表資訊。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> train_timetable.items <span class="keyword">import</span> TrainTimetableItem</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Train_Timetable_Spider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">        name = <span class="string">'train_timetable'</span></span><br><span class="line">        <span class="comment">#start_urls = ['']</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">start_requests</span><span class="params">(self)</span>:</span></span><br><span class="line">                url = <span class="string">'http://twtraffic.tra.gov.tw/twrail/TW_CTSearchResult.aspx'</span></span><br><span class="line"></span><br><span class="line">                payload = &#123;</span><br><span class="line">                        <span class="string">'FromCity'</span>: <span class="string">'4'</span>,</span><br><span class="line">                        <span class="string">'FromStation'</span>: <span class="string">'1115'</span>,</span><br><span class="line">                        <span class="string">'FromStationName'</span>: <span class="string">'0'</span>,</span><br><span class="line">                        <span class="string">'ToCity'</span>: <span class="string">'5'</span>,</span><br><span class="line">                        <span class="string">'ToStation'</span>: <span class="string">'1203'</span>,</span><br><span class="line">                        <span class="string">'ToStationName'</span>: <span class="string">'0'</span>,</span><br><span class="line">                        <span class="string">'ToBackSelect'</span>: <span class="string">'0'</span>,</span><br><span class="line">                        <span class="string">'searchdate_to'</span>: <span class="string">'2019-08-13'</span>,</span><br><span class="line">                        <span class="string">'FromTimeSelect'</span>: <span class="string">'0600'</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">yield</span> scrapy.FormRequest(</span><br><span class="line">                        url = url,</span><br><span class="line">                        formdata = payload,</span><br><span class="line">                        callback = self.parse_list)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">parse_list</span><span class="params">(self,response)</span>:</span></span><br><span class="line"></span><br><span class="line">                train = response.xpath(<span class="string">'//script[2]/text()'</span>)</span><br><span class="line">                train = train.extract()[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">                start = train.find(<span class="string">'['</span>)</span><br><span class="line">                end = train.find(<span class="string">']'</span>)+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">                data = json.loads(train[start:end])</span><br><span class="line"></span><br><span class="line">                count = <span class="number">1</span></span><br><span class="line">                <span class="keyword">for</span> d <span class="keyword">in</span> data:</span><br><span class="line">                        <span class="keyword">print</span> count</span><br><span class="line">                        count = count + <span class="number">1</span></span><br><span class="line">                        <span class="keyword">for</span> key <span class="keyword">in</span> d:</span><br><span class="line">                                <span class="keyword">print</span> key,d[key]</span><br><span class="line">                        <span class="keyword">print</span> <span class="string">'--------------'</span></span><br></pre></td></tr></table></figure><p>完成程式後，執行爬蟲指令來檢查是否成功抓取資料</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy crawl train_timetable</span><br></pre></td></tr></table></figure><p>可以看到已經成功得到想要的相對應欄位</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">End_Code 1411</span><br><span class="line">Discount_Price_Adult None</span><br><span class="line">TrainType 0</span><br><span class="line">Dining N</span><br><span class="line">Train_Code 103</span><br><span class="line">Fare 83</span><br><span class="line">Direction 1</span><br><span class="line">TicketLink N</span><br><span class="line">To_Ticket_Code 151</span><br><span class="line">Begin_Code 1003</span><br><span class="line">Class_Code 1108</span><br><span class="line">End_Name 潮州</span><br><span class="line">From_Departure_Time 0859</span><br><span class="line">Begin_EName Qidu</span><br><span class="line">Package N</span><br><span class="line">Handicapped Y</span><br><span class="line">Begin_Name 七堵</span><br><span class="line">Discount_End_Date None</span><br><span class="line">Comment 每日行駛。</span><br><span class="line">End_EName Chaozhou</span><br><span class="line">MainViaRoad 2</span><br><span class="line">Discount_Begin_Date None</span><br><span class="line">Over_Night 0</span><br><span class="line">From_Ticket_Code 131</span><br><span class="line">To_Arrival_Time 0928</span><br><span class="line">Everyday Y</span><br><span class="line">--------------</span><br><span class="line">2</span><br><span class="line">End_Code 1242</span><br><span class="line">Discount_Price_Adult None</span><br><span class="line">TrainType 0</span><br><span class="line">Dining N</span><br><span class="line">Train_Code 507</span><br><span class="line">Fare 64</span><br><span class="line">Direction 1</span><br><span class="line">TicketLink N</span><br><span class="line">To_Ticket_Code 151</span><br><span class="line">Begin_Code 1003</span><br><span class="line">Class_Code 1111</span><br><span class="line">End_Name 新左營</span><br><span class="line">From_Departure_Time 1035</span><br><span class="line">Begin_EName Qidu</span><br><span class="line">Package N</span><br><span class="line">Handicapped Y</span><br><span class="line">Begin_Name 七堵</span><br><span class="line">Discount_End_Date None</span><br><span class="line">Comment 每日行駛。</span><br><span class="line">End_EName Xinzuoying</span><br><span class="line">MainViaRoad 2</span><br><span class="line">Discount_Begin_Date None</span><br><span class="line">Over_Night 0</span><br><span class="line">From_Ticket_Code 131</span><br><span class="line">To_Arrival_Time 1114</span><br><span class="line">Everyday Y</span><br><span class="line">--------------</span><br></pre></td></tr></table></figure><p>下一步宣告item來進行資料的存取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> train_timetable.items <span class="keyword">import</span> TrainTimetableItem</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Train_Timetable_Spider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">        name = <span class="string">'train_timetable'</span></span><br><span class="line">        <span class="comment">#start_urls = ['']</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">start_requests</span><span class="params">(self)</span>:</span></span><br><span class="line">                url = <span class="string">'http://twtraffic.tra.gov.tw/twrail/TW_CTSearchResult.aspx'</span></span><br><span class="line"></span><br><span class="line">                payload = &#123;</span><br><span class="line">                        <span class="string">'FromCity'</span>: <span class="string">'4'</span>,</span><br><span class="line">                        <span class="string">'FromStation'</span>: <span class="string">'1115'</span>,</span><br><span class="line">                        <span class="string">'FromStationName'</span>: <span class="string">'0'</span>,</span><br><span class="line">                        <span class="string">'ToCity'</span>: <span class="string">'5'</span>,</span><br><span class="line">                        <span class="string">'ToStation'</span>: <span class="string">'1203'</span>,</span><br><span class="line">                        <span class="string">'ToStationName'</span>: <span class="string">'0'</span>,</span><br><span class="line">                        <span class="string">'ToBackSelect'</span>: <span class="string">'0'</span>,</span><br><span class="line">                        <span class="string">'searchdate_to'</span>: <span class="string">'2019-08-13'</span>,</span><br><span class="line">                        <span class="string">'FromTimeSelect'</span>: <span class="string">'0600'</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">yield</span> scrapy.FormRequest(</span><br><span class="line">                        url = url,</span><br><span class="line">                        formdata = payload,</span><br><span class="line">                        callback = self.parse_list)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">parse_list</span><span class="params">(self,response)</span>:</span></span><br><span class="line"></span><br><span class="line">                item = TrainTimetableItem()</span><br><span class="line"></span><br><span class="line">                train = response.xpath(<span class="string">'//script[2]/text()'</span>)</span><br><span class="line">                train = train.extract()[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">                start = train.find(<span class="string">'['</span>)</span><br><span class="line">                end = train.find(<span class="string">']'</span>)+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">                data = json.loads(train[start:end])</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> d <span class="keyword">in</span> data:</span><br><span class="line">                        <span class="keyword">print</span> type(d[<span class="string">'TrainType'</span>])</span><br><span class="line">                        item[<span class="string">'trainType'</span>] = d[<span class="string">'TrainType'</span>]</span><br><span class="line">                        item[<span class="string">'trainClass'</span>] = d[<span class="string">'Train_Code'</span>]</span><br><span class="line">                        item[<span class="string">'startStation'</span>] = d[<span class="string">'Begin_Name'</span>]</span><br><span class="line">                        item[<span class="string">'endStation'</span>] = d[<span class="string">'End_Name'</span>]</span><br><span class="line">                        item[<span class="string">'startTime'</span>] = d[<span class="string">'From_Departure_Time'</span>]</span><br><span class="line">                        item[<span class="string">'arrivalTime'</span>] = d[<span class="string">'To_Arrival_Time'</span>]</span><br><span class="line">                        <span class="keyword">print</span> <span class="string">'--------------'</span></span><br><span class="line">                        <span class="keyword">yield</span> item</span><br></pre></td></tr></table></figure><p>最後將需要的資料進行保存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scrapy crawl train_timetable -o output.json # 輸出為JSON文件</span><br><span class="line">scrapy crawl train_timetable -o output.csv # 輸出為CSV文件</span><br></pre></td></tr></table></figure><p>out.cvs</p><p>資料元素</p><ul><li>起始站,終點站,山/海線,發車時間,抵達時間,車次<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">七堵,潮州,0,0859,0928,103</span><br><span class="line">七堵,新左營,0,1035,1114,507</span><br><span class="line">七堵,潮州,0,1216,1249,511</span><br><span class="line">七堵,潮州,0,1417,1453,513</span><br><span class="line">花蓮,潮州,0,1644,1724,561</span><br><span class="line">七堵,新左營,0,1918,1952,521</span><br><span class="line">七堵,潮州,0,2047,2116,145</span><br><span class="line">花蓮,員林,0,2240,2307,285</span><br></pre></td></tr></table></figure></li></ul><p>列車時刻查詢系統<br>￼<img src="https://i.imgur.com/fXuYgpV.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;編輯 : Frank&lt;br&gt;日期 : 2019/08/13&lt;br&gt;&lt;a href=&quot;https://www.maxlist.xyz/2018/08/25/python_scrapy_ptt/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;參考網址&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="http://franksm.github.io/tags/Python/"/>
    
      <category term="crawler" scheme="http://franksm.github.io/tags/crawler/"/>
    
      <category term="Scrapy" scheme="http://franksm.github.io/tags/Scrapy/"/>
    
  </entry>
  
  <entry>
    <title>Python Pandas基礎 (BMI情境)</title>
    <link href="http://franksm.github.io/2019/08/12/Python-Pandas%E5%9F%BA%E7%A4%8E-BMI%E6%83%85%E5%A2%83/"/>
    <id>http://franksm.github.io/2019/08/12/Python-Pandas%E5%9F%BA%E7%A4%8E-BMI%E6%83%85%E5%A2%83/</id>
    <published>2019-08-12T09:58:21.000Z</published>
    <updated>2019-08-31T20:59:24.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>編輯 : Frank<br>日期 : 2019/08/12<br><a href="https://oranwind.org/python-pandas-ji-chu-jiao-xue/" target="_blank" rel="noopener">參考網址</a></p></blockquote><hr><a id="more"></a><h3 id="範例情境"><a href="#範例情境" class="headerlink" title="範例情境"></a>範例情境</h3><p>處理三年A班幼稚園小朋友的身高、體重資料，需運算BMI訊息並且依序排列，針對於空值請補0。</p><h3 id="讀取二維數據-DataFrame"><a href="#讀取二維數據-DataFrame" class="headerlink" title="讀取二維數據 (DataFrame)"></a>讀取二維數據 (DataFrame)</h3><p>透過Pandas來讀取身高體重資料</p><p>Pandas資料結構:</p><ul><li>一維:Series</li><li>二維:DataFrame</li><li>三維:Panel</li></ul><p>Pandas資料讀取:</p><ul><li>csv:pd.read_csv()</li><li>excel:pd.read_excel()<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">data = &#123;&#125;</span><br><span class="line">data[<span class="string">'height'</span>] = [<span class="number">165</span>,<span class="number">168</span>,<span class="literal">None</span>,<span class="number">172</span>,<span class="number">177</span>]</span><br><span class="line">data[<span class="string">'weight'</span>] = [<span class="number">60</span>,<span class="number">66</span>,<span class="number">62</span>,<span class="number">70</span>,<span class="number">58</span>]</span><br><span class="line">df = pd.DataFrame(data)</span><br></pre></td></tr></table></figure></li></ul><h3 id="分析數據"><a href="#分析數據" class="headerlink" title="分析數據"></a>分析數據</h3><p>運用Pandas判斷身高體重的四分位數、標準差</p><p>Pandas計算函數</p><ul><li>平均:mean()</li><li>標準差:std()</li><li>四分位數:quantile(0.25)，等於所有數值由小到大排列後的第25%的數字</li><li>最小:min()</li><li>最大:max()<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> <span class="string">'name\theight\tweighit'</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'std\t%2.2f\t%2.2f'</span>%(df.std()[<span class="number">0</span>],df.std()[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">print</span> <span class="string">'mean\t%2.2f\t%2.2f'</span>%(df.mean()[<span class="number">0</span>],df.mean()[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">print</span> <span class="string">'min\t%2.2f\t%2.2f'</span>%(df.min()[<span class="number">0</span>],df.min()[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">print</span> <span class="string">'25%'</span>+<span class="string">'\t%2.2f\t%2.2f'</span>%(df.quantile(<span class="number">0.25</span>)[<span class="number">0</span>],df.quantile(<span class="number">0.25</span>)[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">print</span> <span class="string">'50%'</span>+<span class="string">'\t%2.2f\t%2.2f'</span>%(df.quantile(<span class="number">0.5</span>)[<span class="number">0</span>],df.quantile(<span class="number">0.5</span>)[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">print</span> <span class="string">'75%'</span>+<span class="string">'\t%2.2f\t%2.2f'</span>%(df.quantile(<span class="number">0.75</span>)[<span class="number">0</span>],df.quantile(<span class="number">0.75</span>)[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">print</span> <span class="string">'max\t%2.2f\t%2.2f'</span>%(df.max()[<span class="number">0</span>],df.max()[<span class="number">1</span>])</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">name    height  weighit</span><br><span class="line">std     <span class="number">5.20</span>    <span class="number">4.82</span></span><br><span class="line">mean    <span class="number">170.50</span>  <span class="number">63.20</span></span><br><span class="line">min     <span class="number">165.00</span>  <span class="number">58.00</span></span><br><span class="line"><span class="number">25</span>%     <span class="number">167.25</span>  <span class="number">60.00</span></span><br><span class="line"><span class="number">50</span>%     <span class="number">170.00</span>  <span class="number">62.00</span></span><br><span class="line"><span class="number">75</span>%     <span class="number">173.25</span>  <span class="number">66.00</span></span><br><span class="line">max     <span class="number">177.00</span>  <span class="number">70.00</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="計算BMI"><a href="#計算BMI" class="headerlink" title="計算BMI"></a>計算BMI</h3><p>計算Pandas的身高、體重欄位來獲取BMI數值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'BMI'</span>] = df[<span class="string">'weight'</span>]/(df[<span class="string">'height'</span>]*df[<span class="string">'height'</span>])*<span class="number">10000</span></span><br></pre></td></tr></table></figure><h3 id="輸出數據"><a href="#輸出數據" class="headerlink" title="輸出數據"></a>輸出數據</h3><p>顯示Pandas的身高、體重和BMI數值，並且依據BMI來進行排列</p><p>Pandas排序</p><ul><li>sort_index(): 索引排序</li><li>sort_values(by = ‘欄位’): 數值排序</li></ul><p>Pandas升冪或降密</p><ul><li>ascending: True為升冪,False為降密</li></ul><p>Pandas空值處理</p><ul><li>fillna(0):空值皆補0來顯示</li><li>dropna():空值皆刪除</li></ul><p>Pandas小數點位數處理</p><ul><li>round(2): 四捨五入，小數點取自第二位</li></ul><blockquote><p>針對於小數點位數處理的無條件捨去與進位，可使用Numpy來協助處理<br>Ex: print df[‘BMI’].apply(np.floor)</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> df.sort_values(by = <span class="string">'BMI'</span>,ascending = <span class="literal">False</span>).round(<span class="number">2</span>).fillna(<span class="number">0</span>)</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">   height  weight    BMI</span><br><span class="line"><span class="number">3</span>   <span class="number">172.0</span>      <span class="number">70</span>  <span class="number">23.66</span></span><br><span class="line"><span class="number">1</span>   <span class="number">168.0</span>      <span class="number">66</span>  <span class="number">23.38</span></span><br><span class="line"><span class="number">0</span>   <span class="number">165.0</span>      <span class="number">60</span>  <span class="number">22.04</span></span><br><span class="line"><span class="number">4</span>   <span class="number">177.0</span>      <span class="number">58</span>  <span class="number">18.51</span></span><br><span class="line"><span class="number">2</span>     <span class="number">0.0</span>      <span class="number">62</span>   <span class="number">0.00</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;編輯 : Frank&lt;br&gt;日期 : 2019/08/12&lt;br&gt;&lt;a href=&quot;https://oranwind.org/python-pandas-ji-chu-jiao-xue/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;參考網址&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="http://franksm.github.io/tags/Python/"/>
    
      <category term="Pandas" scheme="http://franksm.github.io/tags/Pandas/"/>
    
  </entry>
  
  <entry>
    <title>Python 程式解題 (1)</title>
    <link href="http://franksm.github.io/2019/08/01/first/"/>
    <id>http://franksm.github.io/2019/08/01/first/</id>
    <published>2019-08-01T04:36:19.000Z</published>
    <updated>2019-08-31T20:59:22.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>編輯 : Frank<br>日期 : 2019/08/01<br><a href="https://www.codewars.com/" target="_blank" rel="noopener">參考網站</a></p></blockquote><hr><a id="more"></a><h3 id="題目-Screen-Locking-Patterns"><a href="#題目-Screen-Locking-Patterns" class="headerlink" title="題目: Screen Locking Patterns"></a>題目: Screen Locking Patterns</h3><p><a href="https://www.codewars.com/kata/screen-locking-patterns/train/python" target="_blank" rel="noopener">題目內容</a></p><h3 id="解題觀念"><a href="#解題觀念" class="headerlink" title="解題觀念:"></a>解題觀念:</h3><h4 id="了解所有移動方式"><a href="#了解所有移動方式" class="headerlink" title="了解所有移動方式"></a>了解所有移動方式</h4><p>幫助所有節點去設置所有可滑動方向的路徑，分別有以下組合:<br>左上,上,右上,左,右,左下,下,右下<br>左左上,右右上,左左下,右右下<br>左上上,右上上<br>(共16筆)</p><p>透過 dict 型態來存取節點(key)和可滑動方向路徑(value)</p><p>{<br>‘A’:[左上,右上,….]<br>‘B’:[左上,右上,….]<br>……<br>}</p><blockquote><p>每個節點的可滑動方向路徑順序存取需一致，可解決節點已使用的問題<br>如若可滑動方向路徑上無節點,宣告為’null’</p></blockquote><h4 id="尋找所有節點的走訪"><a href="#尋找所有節點的走訪" class="headerlink" title="尋找所有節點的走訪"></a>尋找所有節點的走訪</h4><p>透過遞迴函數來持續往下進行節點的滑動</p><blockquote><p>若可移動方向節點為’null’,則不做事<br>若節點已使用過,則根據相同方向探索下一個節點</p></blockquote><h3 id="解題程式碼"><a href="#解題程式碼" class="headerlink" title="解題程式碼:"></a>解題程式碼:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 探討節點的移動方式</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getlink</span><span class="params">(i,j)</span>:</span></span><br><span class="line"></span><br><span class="line">    element_link = [] <span class="comment"># 該節點的移動方式</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> i<span class="number">-1</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> j<span class="number">-1</span> &gt;= <span class="number">0</span>:</span><br><span class="line">        element_link.append(map[i<span class="number">-1</span>][j<span class="number">-1</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        element_link.append(<span class="string">'null'</span>)</span><br><span class="line">    <span class="keyword">if</span> j<span class="number">-1</span> &gt;= <span class="number">0</span>:</span><br><span class="line">        element_link.append(map[i][j<span class="number">-1</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        element_link.append(<span class="string">'null'</span>)</span><br><span class="line">    <span class="keyword">if</span> i+<span class="number">1</span> &lt; <span class="number">3</span> <span class="keyword">and</span> j<span class="number">-1</span> &gt;= <span class="number">0</span>:</span><br><span class="line">        element_link.append(map[i+<span class="number">1</span>][j<span class="number">-1</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        element_link.append(<span class="string">'null'</span>)</span><br><span class="line">    <span class="keyword">if</span> i<span class="number">-1</span> &gt;= <span class="number">0</span>:</span><br><span class="line">        element_link.append(map[i<span class="number">-1</span>][j])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        element_link.append(<span class="string">'null'</span>)</span><br><span class="line">    <span class="keyword">if</span> i+<span class="number">1</span> &lt; <span class="number">3</span>:</span><br><span class="line">        element_link.append(map[i+<span class="number">1</span>][j])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        element_link.append(<span class="string">'null'</span>)</span><br><span class="line">    <span class="keyword">if</span> i<span class="number">-1</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> j+<span class="number">1</span> &lt; <span class="number">3</span>:</span><br><span class="line">        element_link.append(map[i<span class="number">-1</span>][j+<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        element_link.append(<span class="string">'null'</span>)</span><br><span class="line">    <span class="keyword">if</span> j+<span class="number">1</span> &lt; <span class="number">3</span>:</span><br><span class="line">        element_link.append(map[i][j+<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        element_link.append(<span class="string">'null'</span>)</span><br><span class="line">    <span class="keyword">if</span> i+<span class="number">1</span> &lt; <span class="number">3</span> <span class="keyword">and</span> j+<span class="number">1</span> &lt; <span class="number">3</span>:</span><br><span class="line">        element_link.append(map[i+<span class="number">1</span>][j+<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        element_link.append(<span class="string">'null'</span>)</span><br><span class="line">    <span class="keyword">if</span> i<span class="number">-2</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> j<span class="number">-1</span> &gt;= <span class="number">0</span>:</span><br><span class="line">        element_link.append(map[i<span class="number">-2</span>][j<span class="number">-1</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        element_link.append(<span class="string">'null'</span>)</span><br><span class="line">    <span class="keyword">if</span> i+<span class="number">2</span> &lt; <span class="number">3</span> <span class="keyword">and</span> j<span class="number">-1</span> &gt;= <span class="number">0</span>:</span><br><span class="line">        element_link.append(map[i+<span class="number">2</span>][j<span class="number">-1</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        element_link.append(<span class="string">'null'</span>)</span><br><span class="line">    <span class="keyword">if</span> i+<span class="number">2</span> &lt; <span class="number">3</span> <span class="keyword">and</span> j+<span class="number">1</span> &lt; <span class="number">3</span>:</span><br><span class="line">        element_link.append(map[i+<span class="number">2</span>][j+<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        element_link.append(<span class="string">'null'</span>)</span><br><span class="line">    <span class="keyword">if</span> i<span class="number">-2</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> j+<span class="number">1</span> &lt; <span class="number">3</span>:</span><br><span class="line">        element_link.append(map[i<span class="number">-2</span>][j+<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        element_link.append(<span class="string">'null'</span>)</span><br><span class="line">    <span class="keyword">if</span> i+<span class="number">1</span> &lt; <span class="number">3</span> <span class="keyword">and</span> j+<span class="number">2</span> &lt; <span class="number">3</span>:</span><br><span class="line">        element_link.append(map[i+<span class="number">1</span>][j+<span class="number">2</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        element_link.append(<span class="string">'null'</span>)</span><br><span class="line">    <span class="keyword">if</span> i+<span class="number">1</span> &lt; <span class="number">3</span> <span class="keyword">and</span> j<span class="number">-2</span> &gt;= <span class="number">0</span>:</span><br><span class="line">        element_link.append(map[i+<span class="number">1</span>][j<span class="number">-2</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        element_link.append(<span class="string">'null'</span>)</span><br><span class="line">    <span class="keyword">if</span> i<span class="number">-1</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> j<span class="number">-2</span> &gt;= <span class="number">0</span>:</span><br><span class="line">        element_link.append(map[i<span class="number">-1</span>][j<span class="number">-2</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        element_link.append(<span class="string">'null'</span>)</span><br><span class="line">    <span class="keyword">if</span> i<span class="number">-1</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> j+<span class="number">2</span> &lt; <span class="number">3</span>:</span><br><span class="line">        element_link.append(map[i<span class="number">-1</span>][j+<span class="number">2</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        element_link.append(<span class="string">'null'</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> element_link</span><br><span class="line"></span><br><span class="line">map = [[<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>],[<span class="string">'D'</span>,<span class="string">'E'</span>,<span class="string">'F'</span>],[<span class="string">'G'</span>,<span class="string">'H'</span>,<span class="string">'I'</span>]] <span class="comment"># 節點的位置分佈</span></span><br><span class="line">all_link = &#123;&#125; <span class="comment"># 所有節點的移動方式</span></span><br><span class="line">sum = <span class="number">0</span> <span class="comment"># 計算路線整體次數</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 探討所有節點的移動方式，並完成all_link的建置</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        all_link[map[i][j]] = getlink(i,j)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遞迴捕捉所有移動方式(移動剩餘次數,移動的節點,未使用的節點,上一個移動路徑,存取節點移動路徑)</span></span><br><span class="line"><span class="comment"># 移動次數:可判斷是否停止移動</span></span><br><span class="line"><span class="comment"># 未使用的節點:可判斷該節點是否被使用</span></span><br><span class="line"><span class="comment"># 上一個移動路徑: 當節點已使用時，透過此路徑可進行節點穿越的動作</span></span><br><span class="line"><span class="comment"># 存取節點的移動路徑:僅供除錯與檢查使用,可以不宣告</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">re</span><span class="params">(count,point,element,i,path)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> sum</span><br><span class="line">    <span class="comment"># 判斷此移動節點是否使用過</span></span><br><span class="line">    <span class="keyword">if</span> point <span class="keyword">in</span> element:</span><br><span class="line">        <span class="comment"># 是否可停止移動</span></span><br><span class="line">        <span class="keyword">if</span> count == <span class="number">0</span>:</span><br><span class="line">            <span class="comment"># 顯示移動方式</span></span><br><span class="line">            <span class="keyword">print</span> path+point</span><br><span class="line">            sum+=<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 移除此節點，代表該節點已被使用</span></span><br><span class="line">            element = element.replace(point,<span class="string">''</span>)</span><br><span class="line">            <span class="comment"># 透過該節點進行下一個節點的移動</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">16</span>):</span><br><span class="line">                <span class="keyword">if</span> all_link[point][i] != <span class="string">'null'</span>:</span><br><span class="line">                    re(count<span class="number">-1</span>,all_link[point][i],element,i,path+point)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 根據使用過的移動節點，再次探索同方向的下一個節點</span></span><br><span class="line">        <span class="keyword">if</span> all_link[point][i] != <span class="string">'null'</span>:</span><br><span class="line">            re(count,all_link[point][i],element,i,path)</span><br><span class="line">            </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count_patterns_from</span><span class="params">(firstPoint, length)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">global</span> sum</span><br><span class="line">    <span class="comment"># 刷新sum數值</span></span><br><span class="line">    sum = <span class="number">0</span></span><br><span class="line">    <span class="comment"># 所有節點元素</span></span><br><span class="line">    element = <span class="string">'ABCDEFGHI'</span>   </span><br><span class="line">    <span class="comment"># 解決特殊情形</span></span><br><span class="line">    <span class="keyword">if</span> length &lt; <span class="number">1</span> <span class="keyword">or</span> length &gt; <span class="number">9</span> <span class="keyword">or</span> firstPoint <span class="keyword">not</span> <span class="keyword">in</span> element:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 404可隨意設置，第一個節點不會使用到此參數</span></span><br><span class="line">        re(length<span class="number">-1</span>,firstPoint,element,<span class="number">404</span>,<span class="string">''</span>)</span><br><span class="line">        <span class="keyword">return</span> sum</span><br></pre></td></tr></table></figure><h3 id="另類解法"><a href="#另類解法" class="headerlink" title="另類解法"></a>另類解法</h3><ol><li>提前運算所有答案，並存入陣列備用<ul><li>優點: 不論count_patterns_from執行多少次，都可快速得知答案</li><li>解題技巧: 可將答案分為此三類[ACGI,BDFH,E],不需所有節點都運算</li></ul></li><li>存取可移動路徑與穿越路徑(無須存取路徑為null的節點)<ul><li>優點: 無須探索所有方向的移動路徑</li></ul></li></ol><hr><h3 id="Frank-huang-另類解法-2"><a href="#Frank-huang-另類解法-2" class="headerlink" title="Frank_huang 另類解法 2"></a>Frank_huang 另類解法 2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sum = 0 <span class="comment"># 計算路線整體次數</span></span><br><span class="line"></span><br><span class="line">DIRECT = &#123;<span class="string">'A'</span>:<span class="built_in">set</span>(<span class="string">'BFEHD'</span>), <span class="string">'B'</span>:<span class="built_in">set</span>(<span class="string">'ACFIEGD'</span>), <span class="string">'C'</span>:<span class="built_in">set</span>(<span class="string">'BFHED'</span>), <span class="string">'D'</span>:<span class="built_in">set</span>(<span class="string">'ABCEIHG'</span>),</span><br><span class="line">            <span class="string">'E'</span>:<span class="built_in">set</span>(<span class="string">'ABCDFGHI'</span>), <span class="string">'F'</span>:<span class="built_in">set</span>(<span class="string">'ABCEGHI'</span>), <span class="string">'G'</span>:<span class="built_in">set</span>(<span class="string">'DBEFH'</span>), </span><br><span class="line">            <span class="string">'H'</span>:<span class="built_in">set</span>(<span class="string">'GDAECFI'</span>), <span class="string">'I'</span>:<span class="built_in">set</span>(<span class="string">'HDEBF'</span>)&#125;</span><br><span class="line">OVER = &#123;<span class="string">'A'</span>:&#123;<span class="string">'B'</span>:<span class="string">'C'</span>, <span class="string">'E'</span>:<span class="string">'I'</span>, <span class="string">'D'</span>:<span class="string">'G'</span>&#125;, <span class="string">'B'</span>:&#123;<span class="string">'E'</span>:<span class="string">'H'</span>&#125;, <span class="string">'C'</span>:&#123;<span class="string">'B'</span>:<span class="string">'A'</span>, <span class="string">'E'</span>:<span class="string">'G'</span>, <span class="string">'F'</span>:<span class="string">'I'</span>&#125;, <span class="string">'D'</span>:&#123;<span class="string">'E'</span>:<span class="string">'F'</span>&#125;,</span><br><span class="line">           <span class="string">'F'</span>:&#123;<span class="string">'E'</span>:<span class="string">'D'</span>&#125;, <span class="string">'G'</span>:&#123;<span class="string">'D'</span>:<span class="string">'A'</span>, <span class="string">'E'</span>:<span class="string">'C'</span>, <span class="string">'H'</span>:<span class="string">'I'</span>&#125;, <span class="string">'G'</span>:&#123;<span class="string">'D'</span>:<span class="string">'A'</span>, <span class="string">'E'</span>:<span class="string">'C'</span>, <span class="string">'H'</span>:<span class="string">'I'</span>&#125;,</span><br><span class="line">           <span class="string">'H'</span>:&#123;<span class="string">'E'</span>:<span class="string">'B'</span>&#125;, <span class="string">'I'</span>:&#123;<span class="string">'H'</span>:<span class="string">'G'</span>, <span class="string">'E'</span>:<span class="string">'A'</span>, <span class="string">'F'</span>:<span class="string">'C'</span>&#125;, <span class="string">'E'</span>:&#123;&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遞迴捕捉所有移動方式(移動剩餘次數,移動的節點,未使用的節點,存取節點移動路徑)</span></span><br><span class="line"><span class="comment"># 移動次數:可判斷是否停止移動</span></span><br><span class="line"><span class="comment"># 未使用的節點:可判斷該節點是否被使用</span></span><br><span class="line"><span class="comment"># 存取節點的移動路徑:僅供除錯與檢查使用,可以不宣告</span></span><br><span class="line">def re(count,point,element,path):</span><br><span class="line">    global sum</span><br><span class="line">    <span class="comment"># 移除此節點，代表該節點已被使用</span></span><br><span class="line">    element = element.replace(point,<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> count == 0:</span><br><span class="line">        <span class="comment"># 顯示移動方式</span></span><br><span class="line">        <span class="comment">#print path</span></span><br><span class="line">        sum+=1</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># 透過該節點進行下一個節點的移動</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> DIRECT[point]:</span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">in</span> element:</span><br><span class="line">                re(count-1,i,element,path+i)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> i <span class="keyword">in</span> OVER[point] and OVER[point][i] <span class="keyword">in</span> element:</span><br><span class="line">                    re(count-1,OVER[point][i],element,path+point)</span><br><span class="line">                    </span><br><span class="line">def count_patterns_from(firstPoint, length):</span><br><span class="line"></span><br><span class="line">    global sum</span><br><span class="line">    <span class="comment"># 刷新sum數值</span></span><br><span class="line">    sum = 0</span><br><span class="line">    <span class="comment"># 所有節點元素</span></span><br><span class="line">    element = <span class="string">'ABCDEFGHI'</span>   </span><br><span class="line">    <span class="comment"># 解決特殊情形</span></span><br><span class="line">    <span class="keyword">if</span> length &lt; 1 or length &gt; 9 or firstPoint not <span class="keyword">in</span> element:</span><br><span class="line">        <span class="built_in">return</span> 0</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        re(length-1,firstPoint,element,firstPoint)</span><br><span class="line">        <span class="built_in">return</span> sum</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> range(<span class="number">200</span>):</span><br><span class="line"></span><br><span class="line">        all_pred = []</span><br><span class="line">        all_target = testY</span><br><span class="line">        sum = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> step, x <span class="keyword">in</span> enumerate(trainX):</span><br><span class="line">                b_x = x.view(BATCH_SIZE,TIME_STEP,DATA_SIZE)</span><br><span class="line">                b_y = trainY[step].view(BATCH_SIZE,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                output = cnnlstm(b_x)</span><br><span class="line">                loss = loss_func(output,b_y)</span><br><span class="line">                optimizer.zero_grad()</span><br><span class="line">                loss.backward()</span><br><span class="line">                optimizer.step()</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(len(output)):</span><br><span class="line">                        sum = sum + pow((float(output[i]) - float(b_y[i])),<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        sum = sum/(BATCH_SIZE*STEP_SIZE)</span><br><span class="line">        train_rmse = math.sqrt(sum)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> epoch % <span class="number">10</span> == <span class="number">0</span>:</span><br><span class="line"></span><br><span class="line">                output = cnnlstm(testX)</span><br><span class="line"></span><br><span class="line">                sum = <span class="number">0</span></span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(len(output)):</span><br><span class="line">                        sum = sum + pow((float(output[i]) - float(testY[i])),<span class="number">2</span>)</span><br><span class="line">                        all_pred.append(round(float(output[i]),<span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">                sum = sum / len(output)</span><br><span class="line">                test_rmse = math.sqrt(sum)</span><br><span class="line"></span><br><span class="line">                print(<span class="string">'Epoch:'</span>,epoch)</span><br><span class="line">                print(<span class="string">'Target:'</span>,all_target)</span><br><span class="line">                print(<span class="string">'Pred:'</span>,all_pred)</span><br><span class="line">                print(<span class="string">'Train_RMSE:'</span>,train_rmse)</span><br><span class="line">                print(<span class="string">'Test_RMSE:'</span>,test_rmse)</span><br><span class="line">                print(<span class="string">'Loss:'</span>,loss)</span><br><span class="line">                print(<span class="string">'=============================================='</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;編輯 : Frank&lt;br&gt;日期 : 2019/08/01&lt;br&gt;&lt;a href=&quot;https://www.codewars.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;參考網站&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="http://franksm.github.io/tags/Python/"/>
    
      <category term="codewars" scheme="http://franksm.github.io/tags/codewars/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://franksm.github.io/2019/08/01/hello-world/"/>
    <id>http://franksm.github.io/2019/08/01/hello-world/</id>
    <published>2019-08-01T02:36:19.000Z</published>
    <updated>2020-04-14T09:25:41.162Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><blockquote><p>hexo g -d</p></blockquote><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
